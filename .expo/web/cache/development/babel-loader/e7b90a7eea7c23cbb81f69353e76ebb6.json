{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useS } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { TouchableWithoutFeedbackt } from \"react-native-web/dist/index\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { StyleS } from \"react-native-web/dist/index\";\nimport { Formik } from 'formik';\nimport CreateAccountStyles from \"../Styles/CreateAccountStyles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar _useState = useState(new Animated.Value(1)),\n    _useState2 = _slicedToArray(_useState, 1),\n    offset = _useState2[0];\n\nvar _useState3 = useState(new Animated.Value(1)),\n    _useState4 = _slicedToArray(_useState3, 1),\n    scale = _useState4[0];\n\nvar transform = [{\n  translateY: offset\n}, {\n  scaleY: scale\n}, {\n  scaleX: scale\n}];\n\nvar CreateAccount = function CreateAccount() {\n  return _jsx(View, {\n    children: _jsx(Formik, {\n      initialValues: {\n        Email: '',\n        lastName: '',\n        firstName: '',\n        password: ''\n      },\n      onSubmit: function onSubmit(values) {\n        console.log(values);\n      },\n      children: function children(props) {\n        return _jsxs(View, {\n          style: CreateAccountStyles.container,\n          children: [_jsx(TextInput, {\n            style: CreateAccountStyles.input,\n            placeholder: \"Entrez votre E-mail\",\n            onChangeText: props.handleChange('Email'),\n            value: props.values.Email\n          }), _jsx(TextInput, {\n            style: CreateAccountStyles.input,\n            placeholder: \"Noms\",\n            onChangeText: props.handleChange('lastName'),\n            value: props.values.lastName\n          }), _jsx(TextInput, {\n            style: CreateAccountStyles.input,\n            placeholder: \"Pr\\xE9noms\",\n            onChangeText: props.handleChange('firstName'),\n            value: props.values.firstName\n          }), _jsx(TextInput, {\n            style: CreateAccountStyles.input,\n            placeholder: \"Entrez un mot de passe\",\n            onChangeText: props.handleChange('password'),\n            value: props.values.password\n          }), _jsxs(TouchableWithoutFeedback, {\n            onPress: props.handleSubmit,\n            children: [_jsx(Animated.View, {\n              style: _objectSpread({\n                transform: transform\n              }, styles.container)\n            }), _jsx(Text, {\n              children: \" Submit \"\n            })]\n          })]\n        });\n      }\n    })\n  });\n};\n\nexport default CreateAccount;","map":{"version":3,"sources":["/home/fye/Projets/React-Native/EasyBuy/Component/CreateAccount.js"],"names":["React","useS","TouchableWithoutFeedbackt","StyleS","Formik","CreateAccountStyles","useState","Animated","Value","offset","scale","transform","translateY","scaleY","scaleX","CreateAccount","Email","lastName","firstName","password","values","console","log","props","container","input","handleChange","handleSubmit","styles"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,IAAf,QAA2B,OAA3B;;;;;SAC0CC,yB;;SAA4CC,M;AACtF,SAAQC,MAAR,QAAsB,QAAtB;AACA,OAAOC,mBAAP;;;;AAEA,gBAAiBC,QAAQ,CAAC,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAzB;AAAA;AAAA,IAAOC,MAAP;;AACE,iBAAgBH,QAAQ,CAAC,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAxB;AAAA;AAAA,IAAOE,KAAP;;AAEF,IAAMC,SAAS,GAAG,CACd;AAAEC,EAAAA,UAAU,EAAEH;AAAd,CADc,EAEd;AAAEI,EAAAA,MAAM,EAAEH;AAAV,CAFc,EAGd;AAAEI,EAAAA,MAAM,EAAEJ;AAAV,CAHc,CAAlB;;AAMA,IAAMK,aAAa,GAAG,SAAhBA,aAAgB,GAAK;AACf,SACI,KAAC,IAAD;AAAA,cACI,KAAC,MAAD;AACI,MAAA,aAAa,EAAI;AAACC,QAAAA,KAAK,EAAE,EAAR;AAAYC,QAAAA,QAAQ,EAAC,EAArB;AAAwBC,QAAAA,SAAS,EAAC,EAAlC;AAAqCC,QAAAA,QAAQ,EAAC;AAA9C,OADrB;AAEI,MAAA,QAAQ,EAAE,kBAACC,MAAD,EAAY;AAEdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACP,OALL;AAAA,gBAOC,kBAACG,KAAD;AAAA,eACG,MAAC,IAAD;AAAM,UAAA,KAAK,EAAElB,mBAAmB,CAACmB,SAAjC;AAAA,qBACI,KAAC,SAAD;AACI,YAAA,KAAK,EAAEnB,mBAAmB,CAACoB,KAD/B;AAEI,YAAA,WAAW,EAAE,qBAFjB;AAGI,YAAA,YAAY,EAAEF,KAAK,CAACG,YAAN,CAAmB,OAAnB,CAHlB;AAII,YAAA,KAAK,EAAEH,KAAK,CAACH,MAAN,CAAaJ;AAJxB,YADJ,EAOI,KAAC,SAAD;AACA,YAAA,KAAK,EAAEX,mBAAmB,CAACoB,KAD3B;AAEI,YAAA,WAAW,EAAE,MAFjB;AAGI,YAAA,YAAY,EAAEF,KAAK,CAACG,YAAN,CAAmB,UAAnB,CAHlB;AAII,YAAA,KAAK,EAAEH,KAAK,CAACH,MAAN,CAAaH;AAJxB,YAPJ,EAaI,KAAC,SAAD;AACA,YAAA,KAAK,EAAEZ,mBAAmB,CAACoB,KAD3B;AAEI,YAAA,WAAW,EAAE,YAFjB;AAGI,YAAA,YAAY,EAAEF,KAAK,CAACG,YAAN,CAAmB,WAAnB,CAHlB;AAII,YAAA,KAAK,EAAEH,KAAK,CAACH,MAAN,CAAaF;AAJxB,YAbJ,EAmBI,KAAC,SAAD;AACA,YAAA,KAAK,EAAEb,mBAAmB,CAACoB,KAD3B;AAEI,YAAA,WAAW,EAAE,wBAFjB;AAGI,YAAA,YAAY,EAAEF,KAAK,CAACG,YAAN,CAAmB,UAAnB,CAHlB;AAII,YAAA,KAAK,EAAEH,KAAK,CAACH,MAAN,CAAaD;AAJxB,YAnBJ,EAyBI,MAAC,wBAAD;AACI,YAAA,OAAO,EAAII,KAAK,CAACI,YADrB;AAAA,uBAGI,KAAC,QAAD,CAAU,IAAV;AAAe,cAAA,KAAK;AAAIhB,gBAAAA,SAAS,EAATA;AAAJ,iBAAkBiB,MAAM,CAACJ,SAAzB;AAApB,cAHJ,EAMI,KAAC,IAAD;AAAA;AAAA,cANJ;AAAA,YAzBJ;AAAA,UADH;AAAA;AAPD;AADJ,IADJ;AAiDX,CAlDD;;AAoDA,eAAeT,aAAf","sourcesContent":["import React, {useS}  from 'react';\nimport {View, StyleSheet,Text, TextInput, TouchableWithoutFeedbackt,TouchableOpacity, StyleS} from 'react-native';\nimport {Formik} from  'formik'\nimport CreateAccountStyles from '../Styles/CreateAccountStyles'   \n\nconst [offset] = useState(new Animated.Value(1));\n  const [scale] = useState(new Animated.Value(1));\n\nconst transform = [\n    { translateY: offset },\n    { scaleY: scale },\n    { scaleX: scale },\n  ];\n\nconst CreateAccount = () =>{\n            return(\n                <View>\n                    <Formik\n                        initialValues = {{Email: '', lastName:'',firstName:'',password:''}}\n                        onSubmit={(values) => {\n                                \n                                console.log(values)\n                        }}>\n\n                    {(props) => (\n                        <View style={CreateAccountStyles.container}>\n                            <TextInput\n                                style={CreateAccountStyles.input}\n                                placeholder= \"Entrez votre E-mail\"\n                                onChangeText={props.handleChange('Email')}\n                                value={props.values.Email}\n                            />\n                            <TextInput\n                            style={CreateAccountStyles.input}\n                                placeholder= \"Noms\"\n                                onChangeText={props.handleChange('lastName')}\n                                value={props.values.lastName}\n                            />\n                            <TextInput\n                            style={CreateAccountStyles.input}\n                                placeholder= \"PrÃ©noms\"\n                                onChangeText={props.handleChange('firstName')}\n                                value={props.values.firstName}\n                            />\n                            <TextInput\n                            style={CreateAccountStyles.input}\n                                placeholder= \"Entrez un mot de passe\"\n                                onChangeText={props.handleChange('password')}\n                                value={props.values.password}\n                            />\n                            <TouchableWithoutFeedback\n                                onPress = {props.handleSubmit}\n                                >\n                                <Animated.View style={{ transform, ...styles.container }}>\n\n                                </Animated.View>\n                                <Text > Submit </Text>\n                                </TouchableWithoutFeedback>\n                        </View>\n                    )}\n                    </Formik>\n                </View>\n            )\n\n}\n\nexport default CreateAccount\n\n"]},"metadata":{},"sourceType":"module"}
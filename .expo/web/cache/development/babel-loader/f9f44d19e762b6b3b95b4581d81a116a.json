{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport * as Animatable from 'react-native-animatable';\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { Formik } from 'formik';\nimport { FontAwesome, Feather } from '@expo/vector-icons';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { TextInput, TouchableHighlight } from 'react-native-gesture-handler';\nimport { createStackNavigator, createAppContainer } from '@react-navigation/stack';\nimport styles from \"../Styles/CreateAccountStyle\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CreateAccount = function CreateAccount(_ref) {\n  var navigation = _ref.navigation;\n\n  var _React$useState = React.useState({\n    Email: '',\n    secureTextEntry: true,\n    isValid: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      data = _React$useState2[0],\n      setData = _React$useState2[1];\n\n  var updateSecurityTextEntry = function updateSecurityTextEntry() {\n    setData(_objectSpread(_objectSpread({}, data), {}, {\n      secureTextEntry: !data.secureTextEntry\n    }));\n  };\n\n  return _jsx(ScrollView, {\n    style: styles.container,\n    showVerticalScrollIndicator: false,\n    children: _jsxs(View, {\n      style: styles.footer,\n      children: [_jsxs(View, {\n        style: styles.icon,\n        children: [_jsx(FontAwesome5, {\n          name: \"school\",\n          size: 90,\n          color: \"black\"\n        }), _jsx(Text, {\n          style: styles.nomApp,\n          children: \"EasyBuy\"\n        })]\n      }), _jsx(Text, {\n        style: {\n          color: '#6050DC',\n          marginTop: 15,\n          fontSize: 30,\n          fontFamily: 'verdana',\n          fontWeight: 'bold'\n        },\n        children: \"Cr\\xE9ez votre compte\"\n      }), _jsx(View, {\n        children: _jsx(Formik, {\n          initialValues: {\n            Email: '',\n            password: ''\n          },\n          onSubmit: function onSubmit(values) {\n            console.log(values);\n          },\n          children: function children(props) {\n            return _jsxs(View, {\n              style: {\n                marginTop: 50\n              },\n              children: [_jsx(Text, {\n                children: \"Email\"\n              }), _jsxs(View, {\n                style: styles.action,\n                children: [_jsx(FontAwesome, {\n                  name: \"user-o\",\n                  color: \"#0000000\",\n                  size: 20\n                }), _jsx(TextInput, {\n                  style: {\n                    marginLeft: 10\n                  },\n                  placeholder: \"Entrez votre E-mail\",\n                  onChangeText: props.handleChange('Email'),\n                  value: props.values.Email,\n                  keyboardType: \"email-address\"\n                })]\n              }), _jsxs(View, {\n                style: {\n                  marginTop: 20\n                },\n                children: [_jsx(Text, {\n                  children: \"Noms\"\n                }), _jsxs(View, {\n                  style: styles.action,\n                  children: [_jsx(FontAwesome, {\n                    name: \"user-o\",\n                    color: \"#0000000\",\n                    size: 20\n                  }), _jsx(TextInput, {\n                    style: {\n                      marginLeft: 10\n                    },\n                    placeholder: \"Entrez votre nom\",\n                    onChangeText: props.handleChange('Email'),\n                    value: props.values.Email,\n                    keyboardType: \"decimal-pad\"\n                  })]\n                })]\n              }), _jsxs(View, {\n                style: {\n                  marginTop: 20\n                },\n                children: [_jsx(Text, {\n                  children: \"Pr\\xE9noms\"\n                }), _jsxs(View, {\n                  style: styles.action,\n                  children: [_jsx(FontAwesome, {\n                    name: \"user-o\",\n                    color: \"#0000000\",\n                    size: 20\n                  }), _jsx(TextInput, {\n                    style: {\n                      marginLeft: 10\n                    },\n                    placeholder: \"Entrez votre pr\\xE9nom\",\n                    onChangeText: props.handleChange('Email'),\n                    value: props.values.Email,\n                    keyboardType: \"email-address\"\n                  })]\n                })]\n              }), _jsxs(View, {\n                style: {\n                  marginTop: 20\n                },\n                children: [_jsx(Text, {\n                  children: \"Mot de passe\"\n                }), _jsxs(View, {\n                  style: styles.action,\n                  children: [_jsx(FontAwesome, {\n                    name: \"lock\",\n                    color: \"#0000000\",\n                    size: 20\n                  }), _jsx(TextInput, {\n                    style: {\n                      marginLeft: 10\n                    },\n                    placeholder: \"Entrez votre mot de passe\",\n                    onChangeText: props.handleChange('password'),\n                    value: props.values.password,\n                    secureTextEntry: data.secureTextEntry\n                  }), _jsx(TouchableOpacity, {\n                    style: {\n                      flex: 1,\n                      marginLeft: Dimensions.get('window').width\n                    },\n                    onPress: updateSecurityTextEntry,\n                    children: data.secureTextEntry ? _jsx(Feather, {\n                      style: {\n                        marginLeft: 85\n                      },\n                      name: \"eye-off\",\n                      color: \"grey\",\n                      size: 20\n                    }) : _jsx(Feather, {\n                      name: \"eye\",\n                      color: \"grey\",\n                      size: 20\n                    })\n                  })]\n                })]\n              }), _jsx(View, {\n                style: styles.button,\n                children: _jsx(TouchableHighlight, {\n                  colors: ['#E73E01', '#DF73FF'],\n                  onPress: props.handleSubmit,\n                  style: styles.signIn,\n                  children: _jsx(Text, {\n                    style: styles.textSignIn,\n                    children: \"Connection\"\n                  })\n                })\n              }), _jsx(View, {\n                style: {\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                },\n                children: _jsx(Text, {\n                  style: {\n                    color: '#E73E01',\n                    marginTop: 10,\n                    fontStyle: 'italic',\n                    fontWeight: 'bold'\n                  },\n                  onPress: true,\n                  children: \"Mot de passe oubli\\xE9?\"\n                })\n              })]\n            });\n          }\n        })\n      })]\n    })\n  });\n};\n\nexport default CreateAccount;","map":{"version":3,"sources":["/home/fye/Projets/React-Native/EasyBuy/Component/CreateAccount.js"],"names":["React","Animatable","FontAwesome5","Formik","FontAwesome","Feather","TextInput","TouchableHighlight","createStackNavigator","createAppContainer","styles","CreateAccount","navigation","useState","Email","secureTextEntry","isValid","data","setData","updateSecurityTextEntry","container","footer","icon","nomApp","color","marginTop","fontSize","fontFamily","fontWeight","password","values","console","log","props","action","marginLeft","handleChange","flex","Dimensions","get","width","button","handleSubmit","signIn","textSignIn","alignItems","justifyContent","fontStyle"],"mappings":"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","sourcesContent":["import React from 'react'\nimport * as Animatable from 'react-native-animatable'\nimport {FontAwesome5} from '@expo/vector-icons'\nimport {Formik} from 'formik'\nimport { FontAwesome,Feather } from '@expo/vector-icons'\nimport {Text,View,ScrollView,TouchableOpacity,StyleSheet,Dimensions} from 'react-native'\nimport { TextInput, TouchableHighlight } from 'react-native-gesture-handler'\nimport { createStackNavigator,createAppContainer } from '@react-navigation/stack'\n//import LinearGradient from 'react-native-linear-gradient';\nimport styles from '../Styles/CreateAccountStyle'\n\n\n\nconst CreateAccount = ({navigation}) => {\n\n    const [data,setData]=React.useState({\n        Email:'',\n        secureTextEntry:true,\n        isValid:true,\n    })\n\n    const updateSecurityTextEntry = ()=> {\n        setData({\n            ...data,\n            secureTextEntry: !data.secureTextEntry\n        })\n    }\n\n    return(\n        <ScrollView style={styles.container}\n            showVerticalScrollIndicator={false}>\n            \n           {/* <View style={styles.header}>\n               <View style={styles.icon}>\n               <FontAwesome5 \n               name=\"school\" size={90} color=\"black\" />\n               <Text style={styles.nomApp}>EasyBuy</Text>\n               </View>\n           </View> */}\n            \n           \n           <View style={styles.footer}>\n                <View style={styles.icon}>\n                    <FontAwesome5 \n                    name=\"school\" size={90} color=\"black\" />\n                    <Text style={styles.nomApp}>EasyBuy</Text>\n                    </View>\n                <Text style={{color:'#6050DC',\n                    marginTop:15,\n                    fontSize:30,\n                    fontFamily:'verdana',\n                    fontWeight:'bold'}}>\n                    Créez votre compte\n                    </Text>\n               {/*  <Text>\n                    Vous n'avez pas encore de compte?\n                    <Text  style={{color:'#E73E01',\n                        fontStyle:'italic'}} \n                        onPress={() => navigation.navigate('CreateAccount')}\n                        >\n                    Inscrivez-vous maintenant\n                </Text>\n                </Text> */}\n                <View>\n                    <Formik\n                        initialValues = {{Email: '',password:''}}\n                        onSubmit={(values) => {\n                                \n                                console.log(values)\n                                //Redirection\n                        }}>\n                        {(props) => (  /* Champs du formulaire */\n                            \n                            \n\n                            <View style={{marginTop: 50}}>\n                                {/* Email */}\n                                <Text>Email</Text>\n                                <View style={styles.action}> \n                                    <FontAwesome \n                                    name='user-o'\n                                    color=\"#0000000\"\n                                    size={20}/>\n                                    <TextInput\n                                        style={{marginLeft:10}}\n                                        placeholder=\"Entrez votre E-mail\"\n                                        onChangeText={props.handleChange('Email')}\n                                        value={props.values.Email}\n                                        keyboardType='email-address'/>\n                                </View>\n                                {/* Noms */}\n                                <View style={{marginTop:20}}>\n                                    <Text>Noms</Text>\n                                    <View style={styles.action}> \n                                        <FontAwesome \n                                        name='user-o'\n                                        color=\"#0000000\"\n                                        size={20}/>\n                                        <TextInput\n                                            style={{marginLeft:10}}\n                                            placeholder=\"Entrez votre nom\"\n                                            onChangeText={props.handleChange('Email')}\n                                            value={props.values.Email}\n                                            keyboardType='decimal-pad'/>\n                                    </View>\n                                </View>\n                               {/*  {Prénoms} */}\n                                <View style={{marginTop:20}}>\n                                    <Text>Prénoms</Text>\n                                    <View style={styles.action}> \n                                        <FontAwesome \n                                        name='user-o'\n                                        color=\"#0000000\"\n                                        size={20}/>\n                                        <TextInput\n                                            style={{marginLeft:10}}\n                                            placeholder=\"Entrez votre prénom\"\n                                            onChangeText={props.handleChange('Email')}\n                                            value={props.values.Email}\n                                            keyboardType='email-address'/>\n                                    </View>\n                                </View>\n\n                                {/* Password */}\n                                <View style={{marginTop:20}}>\n                                    <Text>Mot de passe</Text>\n                                    <View style={styles.action}>\n                                        <FontAwesome \n                                        name='lock'\n                                        color=\"#0000000\"\n                                        size={20}/>\n                                        <TextInput\n                                            style={{marginLeft:10}}\n                                            placeholder=\"Entrez votre mot de passe\"\n                                            onChangeText={props.handleChange('password')}\n                                            value={props.values.password}\n                                            secureTextEntry={data.secureTextEntry}/>\n                                        <TouchableOpacity\n                                            style={{flex:1,marginLeft:Dimensions.get('window').width}}\n                                            onPress={updateSecurityTextEntry}>\n                                            {data.secureTextEntry ? \n                                            <Feather\n                                            style={{marginLeft:85}}\n                                                name=\"eye-off\"\n                                                color=\"grey\"\n                                                size={20}/>\n                                            :\n                                            <Feather\n                                                \n                                                name=\"eye\"\n                                                color=\"grey\"\n                                                size={20}/>}\n                                        </TouchableOpacity>\n                                    </View>\n                                </View>\n\n                                   {/*  button submit */}\n                                    <View style={styles.button}>\n                                        <TouchableHighlight\n                                            colors= {['#E73E01','#DF73FF']}\n                                            onPress = {props.handleSubmit}\n                                            style={styles.signIn}>\n                                            <Text style={styles.textSignIn}>Connection</Text>\n                                        </TouchableHighlight>\n                                    </View>\n                                    <View \n                                        style={{alignItems:'center',\n                                        justifyContent:'center'}}>\n                                        {/* Mot de Passe Oublié */}\n                                        <Text \n                                            style={{color:'#E73E01',\n                                            marginTop:10,\n                                            fontStyle:'italic',\n                                            fontWeight:'bold',\n                                            }} \n                                             onPress>\n                                            Mot de passe oublié?\n                                        </Text>\n                                    </View>\n\n                                 \n\n                            </View>\n                        )}\n                         </Formik>\n                </View>\n                \n                \n           </View>\n        </ScrollView>\n    )\n}\n\nexport default CreateAccount\n\n"]},"metadata":{},"sourceType":"module"}
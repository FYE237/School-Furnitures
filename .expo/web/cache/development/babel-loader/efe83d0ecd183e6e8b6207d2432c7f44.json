{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"children\", \"colors\", \"end\", \"locations\", \"useAngle\", \"angleCenter\", \"angle\", \"start\", \"style\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport processColor from \"react-native-web/dist/exports/processColor\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport NativeLinearGradient from \"./common\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar convertPoint = function convertPoint(name, point) {\n  if (Array.isArray(point)) {\n    console.warn(\"LinearGradient '\" + name + \"' property should be an object with fields 'x' and 'y', \" + 'Array type is deprecated.');\n  }\n\n  if (point !== null && typeof point === 'object') {\n    return [point.x, point.y];\n  }\n\n  return point;\n};\n\nvar validNumber = function validNumber(defaultValue) {\n  return function (value) {\n    return typeof value === 'number' ? value : defaultValue;\n  };\n};\n\nvar LinearGradient = function (_Component) {\n  _inherits(LinearGradient, _Component);\n\n  var _super = _createSuper(LinearGradient);\n\n  function LinearGradient() {\n    _classCallCheck(this, LinearGradient);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(LinearGradient, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(props) {\n      this.gradientRef.setNativeProps(props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          children = _this$props.children,\n          colors = _this$props.colors,\n          end = _this$props.end,\n          locations = _this$props.locations,\n          useAngle = _this$props.useAngle,\n          angleCenter = _this$props.angleCenter,\n          angle = _this$props.angle,\n          start = _this$props.start,\n          style = _this$props.style,\n          otherProps = _objectWithoutProperties(_this$props, _excluded);\n\n      if (colors && locations && colors.length !== locations.length) {\n        console.warn('LinearGradient colors and locations props should be arrays of the same length');\n      }\n\n      var flatStyle = StyleSheet.flatten(style) || {};\n      var borderRadius = flatStyle.borderRadius || 0;\n      var validRadius = validNumber(borderRadius);\n      var borderRadiiPerCorner = [validRadius(flatStyle.borderTopLeftRadius), validRadius(flatStyle.borderTopLeftRadius), validRadius(flatStyle.borderTopRightRadius), validRadius(flatStyle.borderTopRightRadius), validRadius(flatStyle.borderBottomRightRadius), validRadius(flatStyle.borderBottomRightRadius), validRadius(flatStyle.borderBottomLeftRadius), validRadius(flatStyle.borderBottomLeftRadius)];\n      return _jsxs(View, _objectSpread(_objectSpread({\n        ref: function ref(component) {\n          _this.gradientRef = component;\n        }\n      }, otherProps), {}, {\n        style: style,\n        children: [_jsx(NativeLinearGradient, {\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            bottom: 0,\n            right: 0\n          },\n          colors: colors.map(processColor),\n          startPoint: convertPoint('start', start),\n          endPoint: convertPoint('end', end),\n          locations: locations ? locations.slice(0, colors.length) : null,\n          useAngle: useAngle,\n          angleCenter: convertPoint('angleCenter', angleCenter),\n          angle: angle,\n          borderRadii: borderRadiiPerCorner\n        }), children]\n      }));\n    }\n  }]);\n\n  return LinearGradient;\n}(Component);\n\nLinearGradient.defaultProps = {\n  start: {\n    x: 0.5,\n    y: 0.0\n  },\n  end: {\n    x: 0.5,\n    y: 1.0\n  }\n};\nexport { LinearGradient as default };","map":{"version":3,"sources":["/home/fye/Projets/React-Native/EasyBuy/node_modules/react-native-linear-gradient/index.android.js"],"names":["React","Component","NativeLinearGradient","convertPoint","name","point","Array","isArray","console","warn","x","y","validNumber","defaultValue","value","LinearGradient","props","gradientRef","setNativeProps","children","colors","end","locations","useAngle","angleCenter","angle","start","style","otherProps","length","flatStyle","StyleSheet","flatten","borderRadius","validRadius","borderRadiiPerCorner","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","component","position","top","left","bottom","right","map","processColor","slice","defaultProps"],"mappings":"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","sourcesContent":["/**\n * @providesModule LinearGradient\n * @flow\n */\nimport React, { Component } from 'react';\nimport { processColor, StyleSheet, View } from 'react-native';\n\nimport NativeLinearGradient, { type Props } from './common';\n\nconst convertPoint = (name, point) => {\n  if (Array.isArray(point)) {\n    console.warn(\n      `LinearGradient '${name}' property should be an object with fields 'x' and 'y', ` +\n      'Array type is deprecated.'\n    );\n  }\n  // TODO: Update Android native code to receive a {x, y} object, not an array\n  if (point !== null && typeof point === 'object') {\n    return [point.x, point.y];\n  }\n  return point;\n};\n\n/**\n * Checks if value is a valid number. Otherwise, defaults to defaultValue.\n *\n * @param {number} defaultValue\n */\nconst validNumber = (defaultValue) => (value) => {\n  return typeof value === 'number' ? value : defaultValue;\n};\n\nexport default class LinearGradient extends Component<Props> {\n  props: Props;\n  gradientRef: any;\n\n  static defaultProps = {\n    start: { x: 0.5, y: 0.0 },\n    end: { x: 0.5, y: 1.0 },\n  };\n\n  setNativeProps(props: Props) {\n    this.gradientRef.setNativeProps(props);\n  }\n\n  render() {\n    const {\n      children,\n      colors,\n      end,\n      locations,\n      useAngle,\n      angleCenter,\n      angle,\n      start,\n      style,\n      ...otherProps\n    } = this.props;\n\n    if ((colors && locations) && (colors.length !== locations.length)) {\n      console.warn('LinearGradient colors and locations props should be arrays of the same length');\n    }\n\n    // inherit container borderRadius until this issue is resolved:\n    // https://github.com/facebook/react-native/issues/3198\n    const flatStyle = StyleSheet.flatten(style) || {};\n    const borderRadius = flatStyle.borderRadius || 0;\n    const validRadius = validNumber(borderRadius);\n\n    // this is the format taken by:\n    // http://developer.android.com/reference/android/graphics/Path.html#addRoundRect(android.graphics.RectF, float[], android.graphics.Path.Direction)\n    const borderRadiiPerCorner = [\n      validRadius(flatStyle.borderTopLeftRadius),\n      validRadius(flatStyle.borderTopLeftRadius),\n      validRadius(flatStyle.borderTopRightRadius),\n      validRadius(flatStyle.borderTopRightRadius),\n      validRadius(flatStyle.borderBottomRightRadius),\n      validRadius(flatStyle.borderBottomRightRadius),\n      validRadius(flatStyle.borderBottomLeftRadius),\n      validRadius(flatStyle.borderBottomLeftRadius)\n    ];\n\n    return (\n      <View ref={(component) => { this.gradientRef = component; }} {...otherProps} style={style}>\n        <NativeLinearGradient\n          style={{position: 'absolute', top: 0, left: 0, bottom: 0, right: 0}}\n          colors={colors.map(processColor)}\n          startPoint={convertPoint('start', start)}\n          endPoint={convertPoint('end', end)}\n          locations={locations ? locations.slice(0, colors.length) : null}\n          useAngle={useAngle}\n          angleCenter={convertPoint('angleCenter', angleCenter)}\n          angle={angle}\n          borderRadii={borderRadiiPerCorner}\n        />\n        { children }\n      </View>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}